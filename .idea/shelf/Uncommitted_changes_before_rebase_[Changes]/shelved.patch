Index: src/main/java/it/trenical/server/Treno/TrenoImplDB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.trenical.server.Treno;\nimport it.trenical.server.Tratta.TrattaImpl;\nimport it.trenical.server.Tratta.TrattaImplDB;\nimport it.trenical.server.Tratta.TrattaStandard;\nimport it.trenical.server.notifiche.Observable;\n\n\nimport java.sql.*;\nimport java.util.ArrayList;\nimport java.util.List;\n\n\npublic class TrenoImplDB extends Observable implements TrenoImpl {\n    private final String url = \"jdbc:sqlite:db/treniCal.db\";\n    private static final TrenoImplDB instance = new TrenoImplDB();\n    public static TrenoImplDB getInstance() {\n        return instance;\n    }\n\n\n    private TrattaImpl db = TrattaImplDB.getInstance();\n\n    private TrenoImplDB() {\n\n        if (instance != null) {\n            throw new RuntimeException(\"Usa getInstance() per ottenere l'istanza di TrenoImplDB\");\n        }\n    }\n\n\n    @Override\n    public Treno getTreno(String  trenoID) {\n        String sql = \"SELECT * FROM Treno WHERE trenoID = ?\";\n        Treno t = null;\n\n        try (Connection conn = DriverManager.getConnection(url);\n             PreparedStatement stmt = conn.prepareStatement(sql)) {\n\n            stmt.setString(1, trenoID);\n            ResultSet rs = stmt.executeQuery();\n\n            if (rs.next()) {\n\n                String tipoTreno = rs.getString(\"tipoTreno\");\n                String trattaID = rs.getString(\"trattaID\");\n                int prezzo = rs.getInt(\"prezzo\");\n                int postiPrima = rs.getInt(\"postiPrima\");\n                int postiSeconda = rs.getInt(\"postiSeconda\");\n                int postiTerza = rs.getInt(\"postiTerza\");\n                int postiTot = rs.getInt(\"postiTot\");\n               // int tempoPercorrenza = rs.getInt(\"tempoPercorrenza\");\n\n                TrattaStandard tratta =  db.getTratta(trattaID);\n\n                t = new TrenoConcr( trenoID,tipoTreno,tratta,prezzo,postiPrima,postiSeconda,postiTerza,postiTot);\n\n            }\n\n        } catch (SQLException e) {\n            System.err.println(\"Errore lettura treno: \" + e.getMessage());\n        }\n\n        return t;\n    }\n\n    @Override\n    public void setTreno(Treno tr) {\n        String sql =\n                \"INSERT OR REPLACE INTO Treno (trenoID, tipoTreno, trattaID, prezzo, postiPrima, postiSeconda, postiTerza,postiTot, tempoPercorrenza)  \" +\n                \"VALUES (?,?, ?, ?, ?, ?,?,?,?)\";\n\n        try (Connection conn = DriverManager.getConnection(url);\n             PreparedStatement stmt = conn.prepareStatement(sql)) {\n\n            TrattaStandard tratta = tr.getTratta();\n\n            stmt.setString(1, tr.getTrenoID());\n            stmt.setString(2, tr.getTipoTreno());\n            stmt.setString(3, tratta.getCodiceTratta());\n            stmt.setInt(4, tr.getPrezzo());\n            stmt.setInt(5, tr.getPostiPrima());\n            stmt.setInt(6, tr.getPostiSeconda());\n            stmt.setInt(7, tr.getPostiTerza());\n            stmt.setInt(8,tr.getPostiTot());\n            stmt.setInt(9, tr.getTempoPercorrenza());\n\n            notifyObservers(\"Aggiunto treno con ID: \" + tr.getTrenoID());\n            stmt.executeUpdate();\n\n        } catch (SQLException e) {\n            System.err.println(\"Errore salvataggio treno: \" + e.getMessage());\n        }\n    }\n\n    @Override\n    public boolean removeTreno(String trenoID) {\n        String sql = \"DELETE FROM Treno WHERE trenoID = ?\";\n        try (Connection conn = DriverManager.getConnection(url);\n             PreparedStatement stmt = conn.prepareStatement(sql)) {\n\n            stmt.setString(1, trenoID);\n            int righe = stmt.executeUpdate();\n            return righe > 0;\n\n        } catch (SQLException e) {\n            System.err.println(\"Errore rimozione treno: \" + e.getMessage());\n            return false;\n        }\n\n\n    }\n    public static void removeAll() {\n        String sql = \"DELETE FROM Treno\";\n        String url1 = \"jdbc:sqlite:db/treniCal.db\";\n        try (Connection conn = DriverManager.getConnection(url1);\n             PreparedStatement stmt = conn.prepareStatement(sql)) {\n                    stmt.executeUpdate();\n    }catch (SQLException e) {\n            System.err.println(\"Errore rimozione treno: \" + e.getMessage());\n            }\n        }\n\n    public int contaTreni() {\n        String sql = \"SELECT COUNT(*) FROM Treno\";\n        String DB_URL = \"jdbc:sqlite:db/treniCal.db\";\n\n        try (Connection conn = DriverManager.getConnection(DB_URL);\n             PreparedStatement stmt = conn.prepareStatement(sql);\n             ResultSet rs = stmt.executeQuery()) {\n\n            if (rs.next()) {\n                return rs.getInt(1);\n            }\n\n        } catch (SQLException e) {\n            System.err.println(\"Errore conteggio treni: \" + e.getMessage());\n        }\n\n        return 0;\n    }\n\n    public TrenoConcr getTrenoDallaRiga(int riga) {\n        String sql = \"SELECT * FROM Treno LIMIT 1 OFFSET ?\";\n        TrenoConcr t= null;\n\n        try (Connection conn = DriverManager.getConnection(url);\n             PreparedStatement stmt = conn.prepareStatement(sql)) {\n\n            stmt.setInt(1, riga); // indice parte da 0\n            ResultSet rs = stmt.executeQuery();\n\n\n            if (rs.next()) {\n\n                String trenoID = rs.getString(\"trenoID\");\n                String tipoTreno = rs.getString(\"tipoTreno\");\n                String trattaID = rs.getString(\"trattaID\");\n                int prezzo = rs.getInt(\"prezzo\");\n                int postiPrima = rs.getInt(\"postiPrima\");\n                int postiSeconda = rs.getInt(\"postiSeconda\");\n                int postiTerza = rs.getInt(\"postiTerza\");\n                int postiTot = rs.getInt(\"postiTot\");\n\n                TrattaStandard tratta =  db.getTratta(trattaID);\n\n                t = new TrenoConcr( trenoID,tipoTreno,tratta,prezzo,postiPrima,postiSeconda,postiTerza,postiTot);\n\n            }\n\n\n        } catch (SQLException e) {\n            System.err.println(\"Errore recupero treno alla riga \" + riga + \": \" + e.getMessage());\n        }\n\n        return t;\n    }\n    @Override\n    public List<Treno> getAllTreno() {\n        List<Treno> treni = new ArrayList<>();\n        String sql = \"SELECT * FROM Treno\";\n        try (Connection conn = DriverManager.getConnection(url);\n             PreparedStatement stmt = conn.prepareStatement(sql)) {\n            ResultSet rs = stmt.executeQuery();\n            while (rs.next()) {\n                String trenoID = rs.getString(\"trenoID\");\n                String tipoTreno = rs.getString(\"tipoTreno\");\n                String trattaID = rs.getString(\"trattaID\");\n                int prezzo = rs.getInt(\"prezzo\");\n                int postiPrima = rs.getInt(\"postiPrima\");\n                int postiSeconda = rs.getInt(\"postiSeconda\");\n                int postiTerza = rs.getInt(\"postiTerza\");\n                int postiTot = rs.getInt(\"postiTot\");\n\n\n                TrattaStandard tratta =  db.getTratta(trattaID);\n\n                Treno t = new TrenoConcr( trenoID,tipoTreno,tratta,prezzo,postiPrima,postiSeconda,postiTerza,postiTot);\n                treni.add(t);\n\n            }}catch (SQLException e) {\n            System.err.println(\"Errore filtro treno: \" + e.getMessage());\n        }\n        return treni;\n    }\n\n\n    public List<Treno> getByFiltro(String colonna, String valore) {\n        List<Treno> treni = new ArrayList<>();\n        String sql = \"SELECT * FROM Treno WHERE \" + colonna + \" = ?\";\n        try (Connection conn = DriverManager.getConnection(url);\n             PreparedStatement stmt = conn.prepareStatement(sql)) {\n            stmt.setString(1, valore);\n            ResultSet rs = stmt.executeQuery();\n            while (rs.next()) {\n\n                String trenoID = rs.getString(\"trenoID\");\n                String tipoTreno = rs.getString(\"tipoTreno\");\n                String trattaID = rs.getString(\"trattaID\");\n                int prezzo = rs.getInt(\"prezzo\");\n                int postiPrima = rs.getInt(\"postiPrima\");\n                int postiSeconda = rs.getInt(\"postiSeconda\");\n                int postiTerza = rs.getInt(\"postiTerza\");\n                int postiTot = rs.getInt(\"postiTot\");\n\n                TrattaStandard tratta =  db.getTratta(trattaID);\n\n                Treno t = new TrenoConcr( trenoID,tipoTreno,tratta,prezzo,postiPrima,postiSeconda,postiTerza,postiTot);\n                treni.add(t);\n\n            }\n        } catch (SQLException e) {\n            System.err.println(\"Errore filtro treno: \" + e.getMessage());\n        }\n        return treni;\n    }\n\n    public List<Treno> getTrenoByTrattaID(String trattaID) {\n        List<Treno> treni = new ArrayList<>();\n        TrattaImplDB dbtrt = TrattaImplDB.getInstance();\n        String sql = \"SELECT * FROM Treno WHERE trattaID = ?\";\n        System.out.println(\"cerco tratte\");\n        try (Connection conn = DriverManager.getConnection(url);\n             PreparedStatement pstmt = conn.prepareStatement(sql)) {\n\n            pstmt.setString(1, trattaID);\n            ResultSet rs = pstmt.executeQuery();\n\n            while (rs.next()) {\n                Treno treno = new TrenoConcr(\n                        rs.getString(\"trenoID\"),\n                        rs.getString(\"tipoTreno\"),\n                        dbtrt.getTratta(trattaID),\n                        rs.getInt(\"prezzo\"),\n                        rs.getInt(\"postiPrima\"),\n                        rs.getInt(\"postiSeconda\"),\n                        rs.getInt(\"postiTerza\"),\n                        rs.getInt(\"postiTot\"));\n                treni.add(treno);\n            }\n\n        } catch (SQLException e) {\n            System.err.println(\"Errore nella ricerca dei treni per trattaID: \" + e.getMessage());\n        }\n\n        return treni;\n    }\n\n\n    public static TrenoConcr getTrenoByRowIndex(int index) {\n        String DB_URL = \"jdbc:sqlite:db/treniCal.db\"; // aggiorna se serve\n        String sql = \"SELECT * FROM Treno LIMIT 1 OFFSET ?\";\n        TrattaImpl dbt =TrattaImplDB.getInstance();\n        try (Connection conn = DriverManager.getConnection(DB_URL);\n             PreparedStatement stmt = conn.prepareStatement(sql)) {\n\n            stmt.setInt(1, index);\n            ResultSet rs = stmt.executeQuery();\n\n            if (rs.next()) {\n                String trenoID = rs.getString(\"trenoID\");\n                String tipoTreno = rs.getString(\"tipoTreno\");\n                String trattaID = rs.getString(\"trattaID\");\n                int prezzo = rs.getInt(\"prezzo\");\n                int postiPrima = rs.getInt(\"postiPrima\");\n                int postiSeconda = rs.getInt(\"postiSeconda\");\n                int postiTerza = rs.getInt(\"postiTerza\");\n                int postiTot = rs.getInt(\"postiTot\");\n                int tempoPercorrenza = rs.getInt(\"tempoPercorrenza\");\n\n                TrattaStandard tratta = dbt.getTratta(trattaID);\n                return new TrenoConcr(trenoID, tipoTreno, tratta, prezzo, postiPrima,\n                        postiSeconda, postiTerza, postiTot);\n            } else {\n                throw new IllegalArgumentException(\"Nessun treno alla riga: \" + index);\n            }\n\n        } catch (SQLException e) {\n            e.printStackTrace();\n            return null;\n        }\n    }\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/trenical/server/Treno/TrenoImplDB.java b/src/main/java/it/trenical/server/Treno/TrenoImplDB.java
--- a/src/main/java/it/trenical/server/Treno/TrenoImplDB.java	(revision a2ad44464ca99952df1951c8ba80ac9de647d2a8)
+++ b/src/main/java/it/trenical/server/Treno/TrenoImplDB.java	(date 1750870700926)
@@ -100,6 +100,7 @@
 
             stmt.setString(1, trenoID);
             int righe = stmt.executeUpdate();
+
             return righe > 0;
 
         } catch (SQLException e) {
Index: src/main/java/it/trenical/server/TreniCalServer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.trenical.server;\n\nimport io.grpc.Server;\nimport io.grpc.ServerBuilder;\nimport it.trenical.server.Biglietto.BigliettoServiceImpl;\nimport it.trenical.server.Cliente.ClienteServiceImpl;\nimport it.trenical.server.Tratta.TrattaServiceImpl;\nimport it.trenical.server.Treno.TrenoImplDB;\nimport it.trenical.server.Treno.TrenoServiceImpl;\nimport it.trenical.server.igGenerator.IDGeneratorServiceImpl;\nimport it.trenical.server.notifiche.AnalizzatoreTratte;\nimport it.trenical.server.notifiche.NotificaServiceImpl;\nimport it.trenical.server.notifiche.NotificheConcr;\n\nimport java.io.IOException;\n\npublic class TreniCalServer {\n    public static void main(String[] args) throws IOException, InterruptedException {\n        AnalizzatoreTratte pulitore = new AnalizzatoreTratte();\n        pulitore.rimuoviTratteObsolete();\n        Generatore.genera(50,30,100,70);\n        TrenoImplDB trenoDB = TrenoImplDB.getInstance();\n        trenoDB.addObserver(new NotificheConcr());\n\n        Server server = ServerBuilder.forPort(50051)\n                .addService(new ClienteServiceImpl())\n                .addService(new TrenoServiceImpl())\n                .addService(new BigliettoServiceImpl())\n                 .addService(new TrattaServiceImpl())\n                .addService(new IDGeneratorServiceImpl())\n                .addService(new NotificaServiceImpl())\n                .build();\n\n        server.start();\n        System.out.println(\"Server gRPC avviato sulla porta 50051\");\n        server.awaitTermination();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/trenical/server/TreniCalServer.java b/src/main/java/it/trenical/server/TreniCalServer.java
--- a/src/main/java/it/trenical/server/TreniCalServer.java	(revision a2ad44464ca99952df1951c8ba80ac9de647d2a8)
+++ b/src/main/java/it/trenical/server/TreniCalServer.java	(date 1750950473752)
@@ -7,11 +7,13 @@
 import it.trenical.server.Tratta.TrattaServiceImpl;
 import it.trenical.server.Treno.TrenoImplDB;
 import it.trenical.server.Treno.TrenoServiceImpl;
+import it.trenical.server.gui.AdminDashboardSwing;
 import it.trenical.server.igGenerator.IDGeneratorServiceImpl;
 import it.trenical.server.notifiche.AnalizzatoreTratte;
 import it.trenical.server.notifiche.NotificaServiceImpl;
 import it.trenical.server.notifiche.NotificheConcr;
 
+import javax.swing.*;
 import java.io.IOException;
 
 public class TreniCalServer {
@@ -21,7 +23,10 @@
         Generatore.genera(50,30,100,70);
         TrenoImplDB trenoDB = TrenoImplDB.getInstance();
         trenoDB.addObserver(new NotificheConcr());
-
+        SwingUtilities.invokeLater(() -> {
+            System.setProperty("sun.java2d.uiScale", "2.0");
+            new AdminDashboardSwing().setVisible(true);
+        });
         Server server = ServerBuilder.forPort(50051)
                 .addService(new ClienteServiceImpl())
                 .addService(new TrenoServiceImpl())
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"5e2b5f30-b4a1-4e43-97b3-084d6831942b\" name=\"Changes\" comment=\"genratore e remove\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/trenical/client/gui/ClientDashboardSwing.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/trenical/client/gui/ClientDashboardSwing.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/trenical/server/TreniCalServer.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/trenical/server/TreniCalServer.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/trenical/server/gui/AdminDashboardSwing.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/trenical/server/gui/AdminDashboardSwing.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Enum\" />\n        <option value=\"Interface\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {}\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/dsnuni/TreniCalMaven.git&quot;,\n    &quot;accountId&quot;: &quot;10a28b93-2bc1-48de-9ed6-1cecdc984580&quot;\n  }\n}</component>\n  <component name=\"ProblemsViewState\">\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 5\n}</component>\n  <component name=\"ProjectId\" id=\"2y55NNRrwrbeiRnaMCHrevIlVkp\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Application.AdminDashboardFX.executor&quot;: &quot;Run&quot;,\n    &quot;Application.AdminDashboardSwing.executor&quot;: &quot;Run&quot;,\n    &quot;Application.AnalizzatoreTratte.executor&quot;: &quot;Run&quot;,\n    &quot;Application.ClientDashboardSwing.executor&quot;: &quot;Run&quot;,\n    &quot;Application.ClienteClient.executor&quot;: &quot;Run&quot;,\n    &quot;Application.CreatoreBiglietto.executor&quot;: &quot;Run&quot;,\n    &quot;Application.GeneratorConcr.executor&quot;: &quot;Run&quot;,\n    &quot;Application.Generatore.executor&quot;: &quot;Run&quot;,\n    &quot;Application.IdGenerator.executor&quot;: &quot;Run&quot;,\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\n    &quot;Application.MainGetAllTreniServer.executor&quot;: &quot;Run&quot;,\n    &quot;Application.MainPromozioneTest.executor&quot;: &quot;Run&quot;,\n    &quot;Application.PromozioneTest.executor&quot;: &quot;Run&quot;,\n    &quot;Application.Prova.executor&quot;: &quot;Run&quot;,\n    &quot;Application.TreniCalServer.executor&quot;: &quot;Run&quot;,\n    &quot;Application.testGetAllTreni.executor&quot;: &quot;Run&quot;,\n    &quot;JUnit.BigliettoTest.executor&quot;: &quot;Run&quot;,\n    &quot;JUnit.BigliettoTest.testClasseBigliettoDiversa.executor&quot;: &quot;Run&quot;,\n    &quot;JUnit.BigliettoTest.testGetAllBiglietti.executor&quot;: &quot;Run&quot;,\n    &quot;JUnit.BigliettoTest.testPrioritaSerializzazione.executor&quot;: &quot;Run&quot;,\n    &quot;JUnit.BigliettoTest.testRemoveCliente.executor&quot;: &quot;Run&quot;,\n    &quot;JUnit.BigliettoTest.testSetAndGetBiglietto.executor&quot;: &quot;Run&quot;,\n    &quot;JUnit.BigliettoTest.testSetAndGetCliente.executor&quot;: &quot;Run&quot;,\n    &quot;JUnit.BigliettoTest.testSovrascritturaBiglietto.executor&quot;: &quot;Run&quot;,\n    &quot;JUnit.ClienteTest.executor&quot;: &quot;Run&quot;,\n    &quot;JUnit.ClienteTest.testClienteFactoryGetClienteByCodiceFiscale.executor&quot;: &quot;Run&quot;,\n    &quot;JUnit.ClienteTest.testRemoveCliente.executor&quot;: &quot;Run&quot;,\n    &quot;JUnit.ClienteTest.testSetAndGetCliente.executor&quot;: &quot;Run&quot;,\n    &quot;JUnit.TrattaTest.executor&quot;: &quot;Run&quot;,\n    &quot;JUnit.TrattaTest.testSetAndGetTratta.executor&quot;: &quot;Run&quot;,\n    &quot;JUnit.TrenoTest.executor&quot;: &quot;Run&quot;,\n    &quot;JUnit.TrenoTest.testGetAllTreno.executor&quot;: &quot;Run&quot;,\n    &quot;JUnit.TrenoTest.testGetTrenoByID.executor&quot;: &quot;Run&quot;,\n    &quot;JUnit.TrenoTest.testRemoveTreno.executor&quot;: &quot;Run&quot;,\n    &quot;JUnit.TrenoTest.testSetAndGetTreno.executor&quot;: &quot;Debug&quot;,\n    &quot;JUnit.TrenoTest.testTrenoGetters.executor&quot;: &quot;Run&quot;,\n    &quot;Maven.TreniCalGrpc [clean].executor&quot;: &quot;Run&quot;,\n    &quot;Maven.TreniCalGrpc [compile].executor&quot;: &quot;Run&quot;,\n    &quot;Maven.TreniCalGrpc [test].executor&quot;: &quot;Run&quot;,\n    &quot;Maven.TreniCalGrpc [validate].executor&quot;: &quot;Run&quot;,\n    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;provaBuilder&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/home/federico/javafx-sdk-24.0.1&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;onboarding.tips.debug.path&quot;: &quot;/home/federico/IdeaProjects/TreniCal/src/main/java/it/trenical/Main.java&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  },\n  &quot;keyToStringList&quot;: {\n    &quot;DatabaseDriversLRU&quot;: [\n      &quot;mysql&quot;,\n      &quot;sqlite&quot;\n    ]\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Application.AdminDashboardSwing\">\n    <configuration name=\"AdminDashboardSwing\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"it.trenical.server.gui.AdminDashboardSwing\" />\n      <module name=\"TreniCal\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"it.trenical.server.gui.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"AnalizzatoreTratte\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"it.trenical.server.notifiche.AnalizzatoreTratte\" />\n      <module name=\"TreniCal\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"it.trenical.server.notifiche.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"GeneratorConcr\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"it.trenical.server.Tratta.GeneratorConcr\" />\n      <module name=\"TreniCal\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"it.trenical.server.Tratta.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"Generatore\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"it.trenical.server.Generatore\" />\n      <module name=\"TreniCal\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"it.trenical.server.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"TrenoTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"TreniCal\" />\n      <option name=\"PACKAGE_NAME\" value=\"\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"TrenoTest\" />\n      <option name=\"TEST_OBJECT\" value=\"class\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.AdminDashboardSwing\" />\n        <item itemvalue=\"Application.AnalizzatoreTratte\" />\n        <item itemvalue=\"Application.Generatore\" />\n        <item itemvalue=\"JUnit.TrenoTest\" />\n        <item itemvalue=\"Application.GeneratorConcr\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"bundled-jdk-9823dce3aa75-fbdcb00ec9e3-intellij.indexing.shared.core-IU-251.26094.121\" />\n        <option value=\"bundled-js-predefined-d6986cc7102b-b26f3e71634d-JavaScript-IU-251.26094.121\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"5e2b5f30-b4a1-4e43-97b3-084d6831942b\" name=\"Changes\" comment=\"\" />\n      <created>1749111555076</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1749111555076</updated>\n      <workItem from=\"1749111556240\" duration=\"1126000\" />\n      <workItem from=\"1749112690585\" duration=\"3955000\" />\n      <workItem from=\"1749125769546\" duration=\"16639000\" />\n      <workItem from=\"1749193954250\" duration=\"6415000\" />\n      <workItem from=\"1749218599050\" duration=\"10997000\" />\n      <workItem from=\"1749236692700\" duration=\"3124000\" />\n      <workItem from=\"1749280532276\" duration=\"5066000\" />\n      <workItem from=\"1749304350249\" duration=\"16309000\" />\n      <workItem from=\"1749373185982\" duration=\"5369000\" />\n      <workItem from=\"1749378572603\" duration=\"1130000\" />\n      <workItem from=\"1749379718704\" duration=\"3499000\" />\n      <workItem from=\"1749393320578\" duration=\"25544000\" />\n      <workItem from=\"1749460647380\" duration=\"21366000\" />\n      <workItem from=\"1749501909248\" duration=\"5553000\" />\n      <workItem from=\"1749541993176\" duration=\"3048000\" />\n      <workItem from=\"1749545782855\" duration=\"1660000\" />\n      <workItem from=\"1749549774039\" duration=\"155000\" />\n      <workItem from=\"1749563736744\" duration=\"18067000\" />\n      <workItem from=\"1749626364184\" duration=\"5198000\" />\n      <workItem from=\"1749649342505\" duration=\"16620000\" />\n      <workItem from=\"1749719179123\" duration=\"20611000\" />\n      <workItem from=\"1749805749223\" duration=\"15662000\" />\n      <workItem from=\"1749845220619\" duration=\"7288000\" />\n      <workItem from=\"1749888192139\" duration=\"1345000\" />\n      <workItem from=\"1749891407987\" duration=\"27612000\" />\n      <workItem from=\"1749976003839\" duration=\"808000\" />\n      <workItem from=\"1749980114410\" duration=\"13102000\" />\n      <workItem from=\"1749996668729\" duration=\"16412000\" />\n      <workItem from=\"1750063934492\" duration=\"28636000\" />\n      <workItem from=\"1750105628312\" duration=\"2370000\" />\n      <workItem from=\"1750151932484\" duration=\"7302000\" />\n      <workItem from=\"1750746792093\" duration=\"1090000\" />\n      <workItem from=\"1750757390317\" duration=\"274000\" />\n      <workItem from=\"1750857386630\" duration=\"10622000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"tutte le classi importate con successo nessun erorre di compilazione o di import\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1749113468124</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1749113468124</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"database collegato, provo il testing in locale con main di prova per verificare il funzionamento lato server\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1749115981399</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1749115981399</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"prova da terminale\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1749116609001</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1749116609001</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"aggiunte le dipendenze di Junit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1749127757233</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1749127757233</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"primo test Junit su modulo Treno effettuato, FUNZIONANTE\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1749134981827</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1749134981827</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"secondo test Junit su modulo Cliente  effettuato, FUNZIONANTE\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1749137868799</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1749137868799</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"terzo test Junit su modulo Biglietto  effettuato, FUNZIONANTE, procediamo alla creazione di grpc\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1749201493368</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1749201493368</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"modifiche con builder apportate al package  biglietto\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1749223586295</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1749223586295</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"aggiunta classe PromozioniGenerator\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1749229485217</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1749229485217</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"INizio grpc, creazione file TreniCal.proto\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1749239909533</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1749239909533</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"Creazione classi ServiceImpl, creazione classe TreniCalServer, e main di prova nel package client\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1749307983673</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1749307983673</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"Risoluzione bug classe BigliettoServiceImpl, inizio gui lato server, e modifiche xml\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1749381613317</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1749381613317</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"Inizio gui lato server con swing, prove con java FX\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1749401656815</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1749401656815</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"fini implementazione e testing, funzioni add remove e refresh, inizio filtra\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1749416513892</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1749416513892</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"fine gui Amministrativa, e classe di simulazione pagamento\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1749474435676</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1749474435676</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"creazione classe IdGenerator e inizio gui utente\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1749490617059</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1749490617059</updated>\n    </task>\n    <task id=\"LOCAL-00017\" summary=\"fine modifiche post ricevimento, inizio gestione notifiche\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1749630891397</created>\n      <option name=\"number\" value=\"00017\" />\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1749630891397</updated>\n    </task>\n    <task id=\"LOCAL-00018\" summary=\"notifiche db treni aggiunte, modifiche di tutti i db con singleton\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1749654294383</created>\n      <option name=\"number\" value=\"00018\" />\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1749654294383</updated>\n    </task>\n    <task id=\"LOCAL-00019\" summary=\"test rifatti\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1749667424174</created>\n      <option name=\"number\" value=\"00019\" />\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1749667424174</updated>\n    </task>\n    <task id=\"LOCAL-00020\" summary=\"creazione package promozioni\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1749747516372</created>\n      <option name=\"number\" value=\"00020\" />\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1749747516372</updated>\n    </task>\n    <task id=\"LOCAL-00021\" summary=\"fine gui amministratore con modifiche\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1749822138327</created>\n      <option name=\"number\" value=\"00021\" />\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1749822138327</updated>\n    </task>\n    <task id=\"LOCAL-00022\" summary=\"prima parte gui utente\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1749927279410</created>\n      <option name=\"number\" value=\"00022\" />\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1749927279410</updated>\n    </task>\n    <task id=\"LOCAL-00023\" summary=\"commit pre notifica\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1750014522556</created>\n      <option name=\"number\" value=\"00023\" />\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1750014522556</updated>\n    </task>\n    <task id=\"LOCAL-00024\" summary=\"commit  cambiamenti gui client, e remove di oggetti vecchi\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1750100661717</created>\n      <option name=\"number\" value=\"00024\" />\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1750100661717</updated>\n    </task>\n    <task id=\"LOCAL-00025\" summary=\"genratore e remove\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1750165458343</created>\n      <option name=\"number\" value=\"00025\" />\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1750165458343</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"26\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"tutte le classi importate con successo nessun erorre di compilazione o di import\" />\n    <MESSAGE value=\"database collegato, provo il testing in locale con main di prova per verificare il funzionamento lato server\" />\n    <MESSAGE value=\"prova da terminale\" />\n    <MESSAGE value=\"aggiunte le dipendenze di Junit\" />\n    <MESSAGE value=\"primo test Junit su modulo Treno effettuato, FUNZIONANTE\" />\n    <MESSAGE value=\"secondo test Junit su modulo Cliente  effettuato, FUNZIONANTE\" />\n    <MESSAGE value=\"terzo test Junit su modulo Biglietto  effettuato, FUNZIONANTE, procediamo alla creazione di grpc\" />\n    <MESSAGE value=\"modifiche con builder apportate al package  biglietto\" />\n    <MESSAGE value=\"aggiunta classe PromozioniGenerator\" />\n    <MESSAGE value=\"INizio grpc, creazione file TreniCal.proto\" />\n    <MESSAGE value=\"Creazione classi ServiceImpl, creazione classe TreniCalServer, e main di prova nel package client\" />\n    <MESSAGE value=\"Risoluzione bug classe BigliettoServiceImpl, inizio gui lato server, e modifiche xml\" />\n    <MESSAGE value=\"Inizio gui lato server con swing, prove con java FX\" />\n    <MESSAGE value=\"fini implementazione e testing, funzioni add remove e refresh, inizio filtra\" />\n    <MESSAGE value=\"fine gui Amministrativa, e classe di simulazione pagamento\" />\n    <MESSAGE value=\"creazione classe IdGenerator e inizio gui utente\" />\n    <MESSAGE value=\"fine modifiche post ricevimento, inizio gestione notifiche\" />\n    <MESSAGE value=\"notifiche db treni aggiunte, modifiche di tutti i db con singleton\" />\n    <MESSAGE value=\"test rifatti\" />\n    <MESSAGE value=\"creazione package promozioni\" />\n    <MESSAGE value=\"fine gui amministratore con modifiche\" />\n    <MESSAGE value=\"prima parte gui utente\" />\n    <MESSAGE value=\"commit pre notifica\" />\n    <MESSAGE value=\"commit  cambiamenti gui client, e remove di oggetti vecchi\" />\n    <MESSAGE value=\"genratore e remove\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"genratore e remove\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\n          <url>file://$PROJECT_DIR$/src/main/java/it/trenical/client/Main.java</url>\n          <line>8</line>\n          <properties class=\"it.trenical.client.Main\" method=\"main\">\n            <option name=\"EMULATED\" value=\"true\" />\n            <option name=\"WATCH_EXIT\" value=\"false\" />\n          </properties>\n          <option name=\"timeStamp\" value=\"1\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision a2ad44464ca99952df1951c8ba80ac9de647d2a8)
+++ b/.idea/workspace.xml	(date 1750952225872)
@@ -4,11 +4,11 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="5e2b5f30-b4a1-4e43-97b3-084d6831942b" name="Changes" comment="genratore e remove">
+    <list default="true" id="5e2b5f30-b4a1-4e43-97b3-084d6831942b" name="Changes" comment="risoluzione bug">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/it/trenical/client/gui/ClientDashboardSwing.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/trenical/client/gui/ClientDashboardSwing.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/it/trenical/server/Biglietto/BigliettoDB.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/trenical/server/Biglietto/BigliettoDB.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/it/trenical/server/TreniCalServer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/trenical/server/TreniCalServer.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/it/trenical/server/gui/AdminDashboardSwing.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/trenical/server/gui/AdminDashboardSwing.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/it/trenical/server/Treno/TrenoImplDB.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/trenical/server/Treno/TrenoImplDB.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -149,12 +149,12 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="GeneratorConcr" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="it.trenical.server.Tratta.GeneratorConcr" />
+    <configuration name="Generatore" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="it.trenical.server.Generatore" />
       <module name="TreniCal" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="it.trenical.server.Tratta.*" />
+          <option name="PATTERN" value="it.trenical.server.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
@@ -162,8 +162,8 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="Generatore" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="it.trenical.server.Generatore" />
+    <configuration name="TreniCalServer" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="it.trenical.server.TreniCalServer" />
       <module name="TreniCal" />
       <extension name="coverage">
         <pattern>
@@ -186,11 +186,11 @@
     </configuration>
     <recent_temporary>
       <list>
+        <item itemvalue="Application.TreniCalServer" />
         <item itemvalue="Application.AdminDashboardSwing" />
         <item itemvalue="Application.AnalizzatoreTratte" />
         <item itemvalue="Application.Generatore" />
         <item itemvalue="JUnit.TrenoTest" />
-        <item itemvalue="Application.GeneratorConcr" />
       </list>
     </recent_temporary>
   </component>
@@ -242,7 +242,8 @@
       <workItem from="1750151932484" duration="7302000" />
       <workItem from="1750746792093" duration="1090000" />
       <workItem from="1750757390317" duration="274000" />
-      <workItem from="1750857386630" duration="10622000" />
+      <workItem from="1750857386630" duration="12815000" />
+      <workItem from="1750948806266" duration="3038000" />
     </task>
     <task id="LOCAL-00001" summary="tutte le classi importate con successo nessun erorre di compilazione o di import">
       <option name="closed" value="true" />
@@ -444,14 +445,21 @@
       <option name="project" value="LOCAL" />
       <updated>1750165458343</updated>
     </task>
-    <option name="localTasksCounter" value="26" />
+    <task id="LOCAL-00026" summary="risoluzione bug">
+      <option name="closed" value="true" />
+      <created>1750868527900</created>
+      <option name="number" value="00026" />
+      <option name="presentableId" value="LOCAL-00026" />
+      <option name="project" value="LOCAL" />
+      <updated>1750868527900</updated>
+    </task>
+    <option name="localTasksCounter" value="27" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="3" />
   </component>
   <component name="VcsManagerConfiguration">
-    <MESSAGE value="tutte le classi importate con successo nessun erorre di compilazione o di import" />
     <MESSAGE value="database collegato, provo il testing in locale con main di prova per verificare il funzionamento lato server" />
     <MESSAGE value="prova da terminale" />
     <MESSAGE value="aggiunte le dipendenze di Junit" />
@@ -476,7 +484,8 @@
     <MESSAGE value="commit pre notifica" />
     <MESSAGE value="commit  cambiamenti gui client, e remove di oggetti vecchi" />
     <MESSAGE value="genratore e remove" />
-    <option name="LAST_COMMIT_MESSAGE" value="genratore e remove" />
+    <MESSAGE value="risoluzione bug" />
+    <option name="LAST_COMMIT_MESSAGE" value="risoluzione bug" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
Index: src/main/java/it/trenical/server/Biglietto/BigliettoDB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.trenical.server.Biglietto;\n\n\n\nimport it.trenical.server.Cliente.*;\nimport it.trenical.server.Tratta.TrattaStandard;\nimport it.trenical.server.Treno.*;\nimport it.trenical.server.notifiche.Observable;\n\nimport java.sql.*;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport static it.trenical.server.Cliente.ClienteFactory.getClienteByCodiceFiscale;\nimport static it.trenical.server.Treno.TrenoFactory.getTrenoByID;\n\npublic class BigliettoDB extends Observable implements BigliettoImpl {\n    private final String DB_URL = \"jdbc:sqlite:db/treniCal.db\";\n    private static final BigliettoDB instance = new BigliettoDB();\n    public static BigliettoDB getInstance() {\n        return instance;\n    }\n\n    private BigliettoDB() {\n        if (instance != null) {\n            throw new RuntimeException(\"Usa getInstance() per ottenere l'istanza di TrattaImplDB\");\n        }\n    }\n\n\n\n    @Override\n    public void setBiglietto(Biglietto biglietto) {\n        String sql = \"INSERT OR REPLACE INTO Biglietto \" +\n                \"(id, classe, treno_id, carrozza, posto, cliente_id, priorita, prezzo) VALUES (?, ?, ?, ?, ?, ?, ?, ?)\";\n\n        try (Connection conn = DriverManager.getConnection(DB_URL);\n             PreparedStatement stmt = conn.prepareStatement(sql)) {\n\n            stmt.setString(1, biglietto.getBigliettoID());\n            stmt.setString(2, biglietto.getClass().getSimpleName().replace(\"B\", \"\")); // es: \"PrimaClasse\"\n            stmt.setString(3, biglietto.getTrenoBiglietto().getTrenoID());\n            stmt.setString(4, biglietto.getCarrozza());\n            stmt.setString(5, biglietto.getPosto());\n            stmt.setString(6, biglietto.getTitolareBiglietto().getCodiceFiscale());\n            stmt.setString(7, String.join(\",\", biglietto.getPriorità())); // serializza lista in CSV\n            stmt.setInt(8, biglietto.getPrezzo());\n\n            stmt.executeUpdate();\n            notifyObservers(\"Aggiunto Biglietto con ID: \" + biglietto.getBigliettoID());\n\n        } catch (SQLException e) {\n            System.err.println(\"Errore salvataggio biglietto: \" + e.getMessage());\n        }\n    }\n\n    @Override\n    public Biglietto getBiglietto(String bigliettoID) {\n        String sql = \"SELECT * FROM Biglietto WHERE id = ?\";\n\n        try (Connection conn = DriverManager.getConnection(DB_URL);\n             PreparedStatement stmt = conn.prepareStatement(sql)) {\n\n            stmt.setString(1, bigliettoID);\n            ResultSet rs = stmt.executeQuery();\n\n            if (rs.next()) {\n                String classe = rs.getString(\"classe\");\n                String trenoID = rs.getString(\"treno_id\");\n                String carrozza = rs.getString(\"carrozza\");\n                String posto = rs.getString(\"posto\");\n                String clienteID = rs.getString(\"cliente_id\");\n                String prioritaCSV = rs.getString(\"priorita\");\n                int prezzo = rs.getInt(\"prezzo\");\n\n                ClienteConcr cliente = (ClienteConcr) getClienteByCodiceFiscale(clienteID);\n                Treno treno = getTrenoByID(trenoID);\n                List<String> priorita = List.of(prioritaCSV.split(\",\"));\n\n                return switch (classe) {\n                    case \"PrimaClasse\" -> new BPrimaClasse.Builder()\n                            .bigliettoID(bigliettoID)\n                            .titolareBiglietto(cliente)\n                            .trenoBiglietto(treno)\n                            .carrozza(carrozza)\n                            .posto(posto)\n                            .priorità(priorita)\n                            .prezzo(prezzo)\n                            .implementazione(this)\n                            .build();\n\n                    case \"SecondaClasse\" -> new BSecondaClasse.Builder()\n                            .bigliettoID(bigliettoID)\n                            .titolareBiglietto(cliente)\n                            .trenoBiglietto(treno)\n                            .carrozza(carrozza)\n                            .posto(posto)\n                            .priorità(priorita)\n                            .prezzo(prezzo)\n                            .implementazione(this)\n                            .build();\n\n                    case \"TerzaClasse\" -> new BTerzaClasse.Builder()\n                            .bigliettoID(bigliettoID)\n                            .titolareBiglietto(cliente)\n                            .trenoBiglietto(treno)\n                            .carrozza(carrozza)\n                            .posto(posto)\n                            .priorità(priorita)\n                            .prezzo(prezzo)\n                            .implementazione(this)\n                            .build();\n\n                    default -> null;\n                };\n            }\n\n        } catch (SQLException e) {\n            System.err.println(\"Errore lettura biglietto: \" + e.getMessage());\n        }\n\n        return null;\n    }\n\n\n    @Override\n    public boolean removeBiglietto(String bigliettoID) {\n        String sql = \"DELETE FROM Biglietto WHERE id = ?\";\n\n        try (Connection conn = DriverManager.getConnection(DB_URL);\n             PreparedStatement stmt = conn.prepareStatement(sql)) {\n\n            stmt.setString(1, bigliettoID);\n            return stmt.executeUpdate() > 0;\n\n        } catch (SQLException e) {\n            System.err.println(\"Errore eliminazione biglietto: \" + e.getMessage());\n        }\n\n        return false;\n    }\n\n    public static void removeAll() {\n        String sql = \"DELETE FROM Biglietto\";\n        String url1 = \"jdbc:sqlite:db/treniCal.db\";\n        try (Connection conn = DriverManager.getConnection(url1);\n             PreparedStatement stmt = conn.prepareStatement(sql)) {\n            stmt.executeUpdate();\n        }catch (SQLException e) {\n            System.err.println(\"Errore rimozione treno: \" + e.getMessage());\n        }\n    }\n    public List<Biglietto> getByFiltro(String colonna, String valore) {\n        List<Biglietto> biglietti = new ArrayList<>();\n        String sql = \"SELECT * FROM Biglietto WHERE \" + colonna + \" = ?\";\n        try (Connection conn = DriverManager.getConnection(DB_URL);\n             PreparedStatement stmt = conn.prepareStatement(sql)) {\n            stmt.setString(1, valore);\n            ResultSet rs = stmt.executeQuery();\n            while (rs.next()) {\n                Cliente cliente = getClienteByCodiceFiscale(rs.getString(\"cliente_id\"));\n                Treno treno = getTrenoByID(rs.getString(\"treno_id\"));\n                switch (rs.getString(\"classe\")) {\n                    case \"PrimaClasse\":\n                             Biglietto b = new BPrimaClasse.Builder()\n                            .bigliettoID(rs.getString(\"id\"))\n                            //.classe(rs.getString(\"classe\"))\n                            .trenoBiglietto(treno)\n                            .carrozza(rs.getString(\"carrozza\"))\n                            .posto(rs.getString(\"posto\"))\n                            .titolareBiglietto(cliente)\n                            .priorità(List.of(rs.getString(\"priorita\").split(\",\")))\n                            .prezzo(rs.getInt(\"prezzo\"))\n                            .implementazione(this)\n                            .build();\n                    biglietti.add(b);\n                    break;\n                    case \"SecondaClasse\":\n                        Biglietto b2 = new BSecondaClasse.Builder()\n                                .bigliettoID(rs.getString(\"id\"))\n                                .trenoBiglietto(treno)\n                                .carrozza(rs.getString(\"carrozza\"))\n                                .posto(rs.getString(\"posto\"))\n                                .titolareBiglietto(cliente)\n                                .priorità(List.of(rs.getString(\"priorita\").split(\",\")))\n                                .prezzo(rs.getInt(\"prezzo\"))\n                                .implementazione(this)\n                                .build();\n                        biglietti.add(b2);\n                        break;\n\n                    case \"TerzaClasse\":\n                        Biglietto b3 = new BTerzaClasse.Builder()\n                                .bigliettoID(rs.getString(\"id\"))\n                                .trenoBiglietto(treno)\n                                .carrozza(rs.getString(\"carrozza\"))\n                                .posto(rs.getString(\"posto\"))\n                                .titolareBiglietto(cliente)\n                                .priorità(List.of(rs.getString(\"priorita\").split(\",\")))\n                                .prezzo(rs.getInt(\"prezzo\"))\n                                .implementazione(this)\n                                .build();\n                        biglietti.add(b3);\n                        break;\n\n                }\n            }\n        } catch (SQLException e) {\n            System.err.println(\"Errore filtro biglietto: \" + e.getMessage());\n        }\n        return biglietti;\n    }\n\n    public List<Biglietto> getAllBiglietti() {\n        List<Biglietto> biglietti = new ArrayList<>();\n        String sql = \"SELECT * FROM Biglietto\";\n        try (Connection conn = DriverManager.getConnection(DB_URL);\n             PreparedStatement stmt = conn.prepareStatement(sql)) {\n            ResultSet rs = stmt.executeQuery();\n            while (rs.next()) {\n                String bigliettoID = rs.getString(\"id\");\n                String classe = rs.getString(\"classe\");\n                String trenoID = rs.getString(\"treno_id\");\n                String carrozza = rs.getString(\"carrozza\");\n                String posto = rs.getString(\"posto\");\n                String clienteID = rs.getString(\"cliente_id\");\n                String prioritaCSV = rs.getString(\"priorita\");\n                int prezzo = rs.getInt(\"prezzo\");\n\n                ClienteConcr cliente = (ClienteConcr) getClienteByCodiceFiscale(clienteID);\n                Treno treno = getTrenoByID(trenoID);\n                List<String> priorita = List.of(prioritaCSV.split(\",\"));\n                Biglietto biglietto = null;\n\n                switch (classe) {\n                    case \"PrimaClasse\" -> biglietto = new BPrimaClasse.Builder()\n                            .bigliettoID(bigliettoID)\n                            .titolareBiglietto(cliente)\n                            .trenoBiglietto(treno)\n                            .carrozza(carrozza)\n                            .posto(posto)\n                            .priorità(priorita)\n                            .prezzo(prezzo)\n                            .implementazione(this)\n                            .build();\n\n\n                    case \"SecondaClasse\" ->  biglietto = new BSecondaClasse.Builder()\n                            .bigliettoID(bigliettoID)\n                            .titolareBiglietto(cliente)\n                            .trenoBiglietto(treno)\n                            .carrozza(carrozza)\n                            .posto(posto)\n                            .priorità(priorita)\n                            .prezzo(prezzo)\n                            .implementazione(this)\n                            .build();\n\n                    case \"TerzaClasse\" -> biglietto = new BTerzaClasse.Builder()\n                            .bigliettoID(bigliettoID)\n                            .titolareBiglietto(cliente)\n                            .trenoBiglietto(treno)\n                            .carrozza(carrozza)\n                            .posto(posto)\n                            .priorità(priorita)\n                            .prezzo(prezzo)\n                            .implementazione(this)\n                            .build();\n                }\n\n                biglietti.add(biglietto);\n\n            }}catch (SQLException e) {\n            System.err.println(\"Errore filtro treno: \" + e.getMessage());\n        }\n        return biglietti;\n    }\n\n    public List<Biglietto> getBigliettiByTrenoID(String trenoID) {\n        List<Biglietto> biglietti = new ArrayList<>();\n        String sql = \"SELECT * FROM Biglietto WHERE treno_id = ?\";\n\n        try (Connection conn = DriverManager.getConnection(DB_URL);\n             PreparedStatement stmt = conn.prepareStatement(sql)) {\n\n            stmt.setString(1, trenoID);\n            ResultSet rs = stmt.executeQuery();\n\n            while (rs.next()) {\n                String bigliettoID = rs.getString(\"id\");\n                String classe = rs.getString(\"classe\");\n                String carrozza = rs.getString(\"carrozza\");\n                String posto = rs.getString(\"posto\");\n                String clienteID = rs.getString(\"cliente_id\");\n                String prioritaCSV = rs.getString(\"priorita\");\n                int prezzo = rs.getInt(\"prezzo\");\n\n                ClienteConcr cliente = (ClienteConcr) getClienteByCodiceFiscale(clienteID);\n                Treno treno = getTrenoByID(trenoID);\n                List<String> priorita = List.of(prioritaCSV.split(\",\"));\n                Biglietto biglietto = null;\n\n                switch (classe) {\n                    case \"PrimaClasse\" -> biglietto = new BPrimaClasse.Builder()\n                            .bigliettoID(bigliettoID)\n                            .titolareBiglietto(cliente)\n                            .trenoBiglietto(treno)\n                            .carrozza(carrozza)\n                            .posto(posto)\n                            .priorità(priorita)\n                            .prezzo(prezzo)\n                            .implementazione(this)\n                            .build();\n\n                    case \"SecondaClasse\" -> biglietto = new BSecondaClasse.Builder()\n                            .bigliettoID(bigliettoID)\n                            .titolareBiglietto(cliente)\n                            .trenoBiglietto(treno)\n                            .carrozza(carrozza)\n                            .posto(posto)\n                            .priorità(priorita)\n                            .prezzo(prezzo)\n                            .implementazione(this)\n                            .build();\n\n                    case \"TerzaClasse\" -> biglietto = new BTerzaClasse.Builder()\n                            .bigliettoID(bigliettoID)\n                            .titolareBiglietto(cliente)\n                            .trenoBiglietto(treno)\n                            .carrozza(carrozza)\n                            .posto(posto)\n                            .priorità(priorita)\n                            .prezzo(prezzo)\n                            .implementazione(this)\n                            .build();\n                }\n\n                if (biglietto != null) {\n                    biglietti.add(biglietto);\n                }\n            }\n\n        } catch (SQLException e) {\n            System.err.println(\"Errore recupero biglietti per treno: \" + e.getMessage());\n        }\n\n        return biglietti;\n    }\n\n\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/trenical/server/Biglietto/BigliettoDB.java b/src/main/java/it/trenical/server/Biglietto/BigliettoDB.java
--- a/src/main/java/it/trenical/server/Biglietto/BigliettoDB.java	(revision a2ad44464ca99952df1951c8ba80ac9de647d2a8)
+++ b/src/main/java/it/trenical/server/Biglietto/BigliettoDB.java	(date 1750869342885)
@@ -347,6 +347,28 @@
         return biglietti;
     }
 
+    public List<String> getDateByBiglietto( String bigliettoID) {
+        List<String> date = new ArrayList<>();
+        List<Biglietto> biglietti = new ArrayList<>();
+        String sql = "SELECT * FROM Biglietto WHERE id = ?";
+
+        try (Connection conn = DriverManager.getConnection(DB_URL);
+             PreparedStatement stmt = conn.prepareStatement(sql)) {
 
+            stmt.setString(1, bigliettoID);
+            ResultSet rs = stmt.executeQuery();
+
+            if (rs.next()) {
+
+                String trenoID = rs.getString("treno_id");
+                int prezzo = rs.getInt("prezzo");
+
+            }
+        } catch (SQLException e) {
+            System.err.println("Errore recupero biglietti per treno: " + e.getMessage());
+        }
+
+        return date;
+    }
 }
 
